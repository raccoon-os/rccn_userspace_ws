# Cross compilation Dockerfile for ARM64
# Usage: mkdir -p cross_compile/build && docker build . -f Dockerfile.cross --platform linux/arm64 --output cross_compile/out

FROM docker.io/rccn/usr-base AS build

ARG USERNAME=rosdev
ARG OVERLAY_WS=/home/rosdev/ros_ws_install

# Switch to user
USER $USERNAME
RUN mkdir -p $OVERLAY_WS/src
WORKDIR $OVERLAY_WS

# Setup Python environment
RUN pip install uv \
    && ~/.local/bin/uv venv --python 3.12 .venv \
    && . .venv/bin/activate \
    && ~/.local/bin/uv pip install \
        git+https://github.com/colcon/colcon-cargo.git \
        git+https://github.com/colcon/colcon-ros-cargo.git \
        colcon-common-extensions \
        empy==3.3.4 \
        lark \
        numpy \
        Cython \
        bitstruct \
        spacepackets

# Copy source
COPY --chown=$USERNAME ./src $OVERLAY_WS/src

# Build workspace
RUN . /opt/ros/humble/setup.sh && \
    . .venv/bin/activate && \
    touch .venv/COLCON_IGNORE && \
    colcon build \
        --event-handlers console_direct+ \
        --packages-up-to vacuum_test_node

# Fix paths for deployment
RUN sed -i "s@$OVERLAY_WS/.venv/bin/python3@/usr/bin/env python@" $(find . -type f -wholename "./install*/lib/*") && \
    sed -i "s@COLCON_CURRENT_PREFIX=\"/opt/ros/humble\"@COLCON_CURRENT_PREFIX=\"/usr/opt/ros/humble\"@" ./install/setup.sh && \
    rm .venv/bin/python

# Create minimal output image
FROM scratch
COPY --from=build /home/rosdev/ros_ws_install/install .
